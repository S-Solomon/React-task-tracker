[{"/Users/samuelsolomon/Documents/react-task-tracker/src/index.js":"1","/Users/samuelsolomon/Documents/react-task-tracker/src/App.js":"2","/Users/samuelsolomon/Documents/react-task-tracker/src/reportWebVitals.js":"3","/Users/samuelsolomon/Documents/react-task-tracker/src/components/Header.js":"4","/Users/samuelsolomon/Documents/react-task-tracker/src/components/Button.js":"5","/Users/samuelsolomon/Documents/react-task-tracker/src/components/Tasks.js":"6","/Users/samuelsolomon/Documents/react-task-tracker/src/components/Task.js":"7","/Users/samuelsolomon/Documents/react-task-tracker/src/components/AddTask.js":"8"},{"size":500,"mtime":1612052692253,"results":"9","hashOfConfig":"10"},{"size":1309,"mtime":1612567957389,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1612052692254,"results":"12","hashOfConfig":"10"},{"size":585,"mtime":1612149336040,"results":"13","hashOfConfig":"10"},{"size":417,"mtime":1612149491316,"results":"14","hashOfConfig":"10"},{"size":387,"mtime":1612457242854,"results":"15","hashOfConfig":"10"},{"size":454,"mtime":1612458027331,"results":"16","hashOfConfig":"10"},{"size":1460,"mtime":1612567535760,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"ozvuh7",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"35","usedDeprecatedRules":"20"},"/Users/samuelsolomon/Documents/react-task-tracker/src/index.js",[],["36","37"],"/Users/samuelsolomon/Documents/react-task-tracker/src/App.js",[],"/Users/samuelsolomon/Documents/react-task-tracker/src/reportWebVitals.js",[],"/Users/samuelsolomon/Documents/react-task-tracker/src/components/Header.js",[],"/Users/samuelsolomon/Documents/react-task-tracker/src/components/Button.js",[],"/Users/samuelsolomon/Documents/react-task-tracker/src/components/Tasks.js",[],"/Users/samuelsolomon/Documents/react-task-tracker/src/components/Task.js",[],"/Users/samuelsolomon/Documents/react-task-tracker/src/components/AddTask.js",["38"],"import { useState } from 'react';\n\n\nconst AddTask = ({ onAdd }) => {\n    const [text, setText] = useState('')\n    const [day, setDay] = useState('')\n    const [reminder, setReminder] = useState(false)\n\n    const onSubmit =(e) => {\n        e.preventDefault()\n\n        if(!text) {\n            alert('Please add a task')\n            return\n        }\n\n        onAdd({ text, day, reminder })\n\n        setText('')\n        setDay('')\n        setReminder('false')\n    }\n\n    return (\n        <form className=\"add-form\" onSubmit={onSubmit}>\n            <div className=\"form-control\">\n                <label>Task</label>\n                <input type=\"text\" placeholder=\"Add\n                Task\" value={text} onChange={(e) => setText(e.target.value)}/>\n            </div>\n            <div className=\"form-control\">\n                <label>Day & Time</label>\n                <input type=\"text\" placeholder=\"Add Day\n                & Time\" value={day} onChange={(e) => setDay(e.target.value)}/>\n            </div>\n            <div className=\"form-control form-control-check\">\n                <label>Set Reminder</label>\n                <input type=\"checkbox\"\n                checked={reminder}\n                value={reminder} onChange={(e) => setReminder(e.\n                currentTarget.checked)}/> \n            </div>\n\n            <input type=\"submit\" value=\"Save Task\"\n            className=\"btn btn-block\"\n            />\n        </form>\n    )\n}\n\nexport default AddTask\n",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":40,"column":64,"nodeType":"45","messageId":"46","endLine":40,"endColumn":65,"fix":"47"},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"50","text":"51"},"no-global-assign","no-unsafe-negation",[1243,1261],"\n                ."]